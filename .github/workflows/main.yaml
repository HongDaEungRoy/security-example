name: Spring Boot Service Deployment

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.JAVA_DISTRIBUTION }}

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew clean build -x test
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Package
        path: build/libs/*.jar

  deploy-server-1:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: Package
        
    - name: List downloaded files
      run: ls -la

    - name: Deploy to Server 1
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_1_HOST }}
        username: ${{ secrets.SERVER_1_USERNAME }}
        key: ${{ secrets.SERVER_1_SSH_KEY }}
        script: |
          cd /home/pigplan
          pwd
          ls -la  # 현재 디렉토리 파일 확인
          
          # 기존 jar 백업
          if [ -f gitActionTest.jar ]; then
            cp gitActionTest.jar gitActionTest.jar.backup
          fi
          
          # 새 버전 배포 전 디버깅
          echo "Current directory contents:"
          ls -la
          
          # 새 버전 배포 
          find . -name "*.jar" -type f -exec cp {} gitActionTest.jar \;
          
          if [ -f gitActionTest.jar ]; then
            chmod +x gitActionTest.jar
            echo "JAR file deployed successfully"
            ls -la gitActionTest.jar
          else
            echo "Failed to deploy JAR file"
            exit 1
          fi
          
          # 서비스 상태 확인 및 재시작
          sudo systemctl status gitActionTest.service || true
          sudo systemctl restart gitActionTest.service
          sleep 5
          sudo systemctl status gitActionTest.service

  deploy-server-2:
    needs: deploy-server-1
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: Package

    - name: List downloaded files
      run: ls -la

    - name: Deploy to Server 2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_2_HOST }}
        username: ${{ secrets.SERVER_2_USERNAME }}
        key: ${{ secrets.SERVER_2_SSH_KEY }}
        script: |
          cd /home/pigplan
          pwd
          ls -la  # 현재 디렉토리 파일 확인
          
          # 기존 jar 백업
          if [ -f gitActionTest.jar ]; then
            cp gitActionTest.jar gitActionTest.jar.backup
          fi
          
          # 새 버전 배포 전 디버깅
          echo "Current directory contents:"
          ls -la
          
          # 새 버전 배포 
          find . -name "*.jar" -type f -exec cp {} gitActionTest.jar \;
          
          if [ -f gitActionTest.jar ]; then
            chmod +x gitActionTest.jar
            echo "JAR file deployed successfully"
            ls -la gitActionTest.jar
          else
            echo "Failed to deploy JAR file"
            exit 1
          fi
          
          # 서비스 상태 확인 및 재시작
          sudo systemctl status gitActionTest.service || true
          sudo systemctl restart gitActionTest.service
          sleep 5
          sudo systemctl status gitActionTest.service